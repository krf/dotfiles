#
# FROM: kdesdk/scripts
#
# Some valgrind suppressions handy for ignoring stuff we don't care
# about when valgrinding kde applications
#
# Library paths and versions from debian unstable, YMMV
#

#
# ld.so errors
#

{
    strchr/decompose_rpath/_dl_map_object
    MemCheck:Cond
    fun:strchr
    fun:decompose_rpath
    fun:_dl_map_object
}

{
    strlen/libc/_dl_catch_error
    MemCheck:Cond
    fun:strlen
    fun:_dl_open
    obj:*libdl-2*.so
    fun:_dl_catch_error*
}

{
    strchr/libc/_dl_catch_error
    MemCheck:Cond
    fun:strchr
    obj:*libc-2.2.?.so
    fun:_dl_catch_error
}

{
    strrchr/_dl_map_object_from_fd/_dl_map_object
    MemCheck:Cond
    fun:strrchr
    fun:_dl_map_object_from_fd
    fun:_dl_map_object
}

# Needed with /lib/ld-2.12.1.so
{
   index/expand_dynamic_string_token/_dl_map_object
   Memcheck:Cond
   fun:index
   fun:expand_dynamic_string_token
   fun:_dl_map_object
}

{
   strlen/_dl_signal_cerror/_dl_lookup_symbol_internal
   Memcheck:Cond
   fun:strlen
   fun:_dl_signal_cerror
   fun:_dl_lookup_symbol_internal
   fun:*dlsym
}

#
# X library errors
#

{
    libXft(Cond)
    MemCheck:Cond
    obj:/usr/X11R6/lib/libXft.so.1.1
    obj:/usr/X11R6/lib/libXft.so.1.1
}

{
   write(buf)/libc/libICE
   Memcheck:Param
   write(buf)
   fun:__GI___libc_write
   fun:_IceTransWrite
   fun:_IceWrite
   fun:IceFlush
}

{
   write(buf)/libc/libICE(nosymbols)
   Memcheck:Param
   write(buf)
   fun:__write_nocancel
   obj:/usr/lib*/libICE.so.*
   obj:/usr/lib*/libICE.so.*
}

{
   write(buf)/libc/libICE(variant)
   Memcheck:Param
   write(buf)
   obj:/lib/libpthread-*.so
   obj:/usr/lib/libICE.so.*
   fun:_IceWrite
   fun:IceFlush
}

{
   write(buf)/libc/libX11
   Memcheck:Param
   write(buf)
   fun:__GI___libc_write
   fun:_X11TransWrite
   fun:_XFlushInt
   fun:_XFlush
}

{
   write(buf)/libc/libX11
   Memcheck:Param
   write(buf)
   fun:__GI___libc_write
   fun:_X11TransWrite
   fun:_XFlushInt
   fun:_XReply
}

{
   writev(vector[...])
   Memcheck:Param
   writev(vector[...])
   fun:*writev
   obj:libX11.so.*
   fun:_X11TransWritev
   fun:_XSend
}

#
# SSL errors
#

{
    various1/libcrypto
    Memcheck:Value4
    obj:*libcrypto.so.0.9.7
}

{
    various2/libcrypto
    Memcheck:Cond
    obj:*libcrypto.so.0.9.7
}

{
    ssl3_read_bytes1/libssl
    Memcheck:Cond
    fun:memcpy
    fun:ssl3_read_bytes
}

{
    ssl3_read_bytes2/libssl
    Memcheck:Cond
    fun:ssl3_read_bytes
}

{
    ssl3_get_message/libssl
    Memcheck:Cond
    fun:ssl3_get_message
}

# zlib-1.2.x uses uninitialised memory in some tricky way which
# apparently is harmless (it must amount to a vectorised while-loop,
# nothing else makes sense).  Fools Memcheck though.  See the mentioned
# URL for details.
{
   zlib-1.2.x trickyness (1): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Cond
   obj:/*lib*/libz.so.1.2.*
   ...
   fun:deflate
}

{
   zlib-1.2.x trickyness (2): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Value8
   obj:/*lib*/libz.so.1.2.*
   ...
   fun:deflate
}

{
   zlib-1.2.x trickyness (2): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Value4
   obj:/*lib*/libz.so.1.2.*
   ...
   fun:deflate
}

# Leakcheck suppressions
{
   dlopen_worker_malloc
   Memcheck:Leak
   fun:malloc
   ...
   fun:dl_open_worker
}

{
   dlopen_worker_calloc
   Memcheck:Leak
   fun:calloc
   ...
   fun:dl_open_worker
}

{
   fontconfig_init
   Memcheck:Leak
   ...
   fun:FcInit
}

# Helgrind suppressions
{
   QMutex_false_race
   Helgrind:Race
   fun:_ZN6QMutex6unlockEv
}
{
   deallocate_stack
   Helgrind:Race
   fun:__deallocate_stack
   fun:start_thread
   fun:clone
}

